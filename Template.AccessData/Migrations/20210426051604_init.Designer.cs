// <auto-generated />
using System;
using MicroservicioHotel.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroservicioHotel.AccessData.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20210426051604_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("31bd0d9a-2c95-482f-a0a4-fa02bb9ae890"),
                            Descripcion = "Habitación para una persona",
                            Nombre = "Individual"
                        },
                        new
                        {
                            CategoriaId = new Guid("dea6dadb-dbd4-4796-97dc-2b757f942960"),
                            Descripcion = "Habitación para dos personas",
                            Nombre = "Matrimonial"
                        },
                        new
                        {
                            CategoriaId = new Guid("286a6a30-0920-46f3-9a0a-b55dbf8b1e2c"),
                            Descripcion = "Habitación para cuatro personas",
                            Nombre = "Suite"
                        });
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.FotoHotel", b =>
                {
                    b.Property<Guid>("FotoHotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("FotoHotelId");

                    b.HasIndex("HotelId");

                    b.ToTable("FotosHoteles");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Habitacion", b =>
                {
                    b.Property<int>("HabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("HabitacionId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("HotelId");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DireccionNum")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("DireccionObservaciones")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Estrellas")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 7)
                        .HasColumnType("decimal(10,7)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Longitud")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 7)
                        .HasColumnType("decimal(10,7)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("HotelId");

                    b.ToTable("Hoteles");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.FotoHotel", b =>
                {
                    b.HasOne("MicroservicioHotel.Domain.Entities.Hotel", "Hotel")
                        .WithMany("FotosHotel")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Habitacion", b =>
                {
                    b.HasOne("MicroservicioHotel.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Habitaciones")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroservicioHotel.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Habitaciones")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Habitaciones");
                });

            modelBuilder.Entity("MicroservicioHotel.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("FotosHotel");

                    b.Navigation("Habitaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
